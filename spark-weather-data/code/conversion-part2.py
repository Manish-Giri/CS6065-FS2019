import sys

# this code will perform the second part of the cleanup as shown in temp_test.html, like dropping and renaming columns, and typecasting

from pyspark import SparkContext, SparkConf
from pyspark.sql import SparkSession

# input files will be part files generated by spark in step 1
# spark-outputs/weather/2019/temp/part-00000
input_path_prefix = 'spark-outputs/weather/'
input_path_suffix = 'temp/part-00000'
output_prefix = 'spark-outputs/weather/'
output_suffix = 'temp1/'
years = list(range(2010, 2020))




if __name__ == "__main__":
        # create Spark context with Spark configuration
    conf = SparkConf().setAppName("Spark P3 v1")
    spark = SparkSession.builder.appName(
        "Spark P3 All Years Part 2 v1").config("spark.executor.memory", "14g").config("spark.driver.memory", "12g").getOrCreate()
    # spark = SparkContext(conf=conf)

    #in_path = folder + str(i) + '/'
    # print(path)
    for i in years:
	year = str(i)
	path = input_path_prefix + year + '/' + input_path_suffix
	newInData = spark.read.csv(path,header=False,sep=' ')
	cleanData = newInData.drop('_c4','_c6','_c8','_c10','_c12','_c14')
        # rename columns with schema names
	cleanData = cleanData.withColumnRenamed('_c0','STN').withColumnRenamed('_c1','WBAN').withColumnRenamed('_c2','YEARMODA')\
                    .withColumnRenamed('_c3','TEMP').withColumnRenamed('_c5','DEWP')\
                    .withColumnRenamed('_c7','SLP').withColumnRenamed('_c9','STP')\
                    .withColumnRenamed('_c11','VISIB').withColumnRenamed('_c13','WDSP')\
                    .withColumnRenamed('_c15','MXSPD').withColumnRenamed('_c16','GUST')\
                    .withColumnRenamed('_c17','MAX').withColumnRenamed('_c18','MIN')\
                    .withColumnRenamed('_c19','PRCP').withColumnRenamed('_c20','SNDP')\
                    .withColumnRenamed('_c21','FRSHTT')
	# cast columns to float
	convertedDF = cleanData.withColumn("TEMP", cleanData["TEMP"].cast("float"))\
                      .withColumn("DEWP", cleanData["DEWP"].cast("float"))\
                      .withColumn("SLP", cleanData["SLP"].cast("float"))\
                      .withColumn("STP", cleanData["STP"].cast("float"))\
                      .withColumn("VISIB", cleanData["VISIB"].cast("float"))\
                      .withColumn("WDSP", cleanData["WDSP"].cast("float"))\
                      .withColumn("MXSPD", cleanData["MXSPD"].cast("float"))\
                      .withColumn("GUST", cleanData["GUST"].cast("float"))\
                      .withColumn("MAX", cleanData["MAX"].cast("float"))\
                      .withColumn("MIN", cleanData["MIN"].cast("float"))\
                      .withColumn("PRCP", cleanData["PRCP"].cast("float"))\
                      .withColumn("SNDP", cleanData["SNDP"].cast("float"))
    

        convertedData = convertedDF.rdd
	output_folder = output_prefix + year + '/' + 'temp1/'
	convertedData.coalesce(1).saveAsTextFile(output_folder) 

